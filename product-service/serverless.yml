service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - 'dynamodb:DescribeTable'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
            - 'dynamodb:GetItem'
            - 'dynamodb:PutItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource:
          - "arn:aws:dynamodb:*:*:table/*"

functions:
  productsList:
    handler: handlers/productsList.productsList
    environment:
        PRODUCTS_TABLE: products
        STOCKS_TABLE: stocks
    events:
      - httpApi:
          path: /products
          method: get
          cors: true
  productById:
    handler: handlers/productById.productById
    environment:
      PRODUCTS_TABLE: products
      STOCKS_TABLE: stocks
    events:
      - httpApi:
          path: /products/{id}
          method: get
          cors: true
  createProducts:
    handler: handlers/createProducts.createProducts
    environment:
      PRODUCTS_TABLE: products
      STOCKS_TABLE: stocks
    events:
        - httpApi:
            path: /products
            method: post
            cors: true

resources:
  Resources:
    products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
